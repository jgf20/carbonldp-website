<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
	">
	
	<context:annotation-config/>
	<context:component-scan base-package="org.openrdf.spring"/>
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- ====== Applications Context ====== -->
	<!-- === Application Repositories Configuration === -->
	<bean id="repositoryManager" class="org.openrdf.repository.manager.LocalRepositoryManager"
	      init-method="initialize" destroy-method="shutDown">
	    <constructor-arg>
	        <bean class="java.io.File">
	            <constructor-arg value="${repositories.directory}" />
	        </bean>
	    </constructor-arg>
	</bean>
	
	<!-- <bean name="connectionFactory" class="org.openrdf.spring.DynamicRepositoryManagerConnectionFactory" scope="prototype"> -->
	<bean name="connectionFactory" class="org.openrdf.spring.DynamicRepositoryManagerConnectionFactory">
	    <constructor-arg ref="repositoryManager" />
	    <constructor-arg ref="applicationContextRepositoryIDProvider" />
	</bean>
	
	<!-- <bean id="repositoryIDProvider" class="com.carbonldp.repository.RepositoryIDProvider" scope="prototype"></bean> -->
	<bean id="applicationContextRepositoryIDProvider" class="com.carbonldp.repository.ApplicationContextRepositoryIDProvider"></bean>
	
	<bean id="transactionManager" class="org.openrdf.spring.SesameTransactionManager">
	    <constructor-arg ref="connectionFactory" />
	</bean>
	<!-- === End: Application Repositories Configuration === -->
	
	<!-- === Application Services === -->
	<bean id="rdfDocumentService" class="com.carbonldp.repository.services.RDFDocumentService" scope="prototype">
		<constructor-arg ref="connectionFactory" />
	</bean>
	<!-- === End: Application Services === -->
	<!-- ====== End: Applications Context ====== -->
	
	<!-- ====== Platform Context ====== -->
	<!-- === Platform Repository Configuration === -->
	<bean id="platformRepository" class="org.openrdf.repository.sail.SailRepository" init-method="initialize">
		<constructor-arg>
			<bean id="platformStore" class="org.openrdf.sail.nativerdf.NativeStore">
				<constructor-arg>
					<bean class="java.io.File">
						<constructor-arg value="${repositories.platform.directory}" />
					</bean>
				</constructor-arg>
			</bean>
		</constructor-arg>
	</bean>
	<bean id="platformConnectionFactory" class="org.openrdf.spring.RepositoryConnectionFactory">
		<constructor-arg ref="platformRepository" />
	</bean>
	<bean id="platformTransactionManager" class="org.openrdf.spring.SesameTransactionManager">
		<constructor-arg ref="platformConnectionFactory" />
	</bean>
	<!-- === End: Platform Repository Configuration === -->
	
	<!-- === Platform Services === -->
	<bean id="agentService" class="com.carbonldp.agents.AgentService">
		<constructor-arg ref="platformConnectionFactory" />
	</bean>
	<!-- === End: Platform Services === -->
	
	<!-- ====== End: Platform Context ====== -->
	
</beans>
